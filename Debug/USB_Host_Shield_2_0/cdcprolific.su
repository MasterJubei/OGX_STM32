UsbCore.h:141:25:virtual uint8_t USBDeviceConfig::ConfigureDevice(uint8_t, uint8_t, bool)	0	static
UsbCore.h:157:22:virtual void USBDeviceConfig::ResetHubPort(uint8_t)	0	static
UsbCore.h:161:22:virtual bool USBDeviceConfig::VIDPIDOK(uint16_t, uint16_t)	0	static
UsbCore.h:165:22:virtual bool USBDeviceConfig::DEVCLASSOK(uint8_t)	0	static
UsbCore.h:169:22:virtual bool USBDeviceConfig::DEVSUBCLASSOK(uint8_t)	0	static
cdcacm.h:209:25:virtual uint8_t ACM::GetAddress()	0	static
cdcacm.h:213:22:virtual bool ACM::isReady()	0	static
cdcacm.h:217:30:virtual tty_features ACM::enhanced_status()	0	static
cdcacm.h:221:30:virtual tty_features ACM::enhanced_features()	0	static
cdcacm.h:232:22:virtual void ACM::autoflowRTS(bool)	0	static
cdcacm.h:235:22:virtual void ACM::autoflowDSR(bool)	0	static
cdcacm.h:238:22:virtual void ACM::autoflowXON(bool)	0	static
cdcacm.h:241:22:virtual void ACM::half_duplex(bool)	0	static
cdcacm.h:244:22:virtual void ACM::wide(bool)	0	static
cdcprolific.cpp:24:9:virtual uint8_t PL2303::Init(uint8_t, uint8_t, bool)	136	static
hexdump.h:51:6:void HexDumper<BASE_CLASS, LEN_TYPE, OFFSET_TYPE>::Parse(LEN_TYPE, const uint8_t*, const OFFSET_TYPE&) [with BASE_CLASS = USBReadParser; LEN_TYPE = short unsigned int; OFFSET_TYPE = short unsigned int]	40	static
confdescparser.h:91:6:void ConfigDescParser<CLASS_ID, SUBCLASS_ID, PROTOCOL_ID, MASK>::Parse(uint16_t, const uint8_t*, const uint16_t&) [with unsigned char CLASS_ID = 255; unsigned char SUBCLASS_ID = 0; unsigned char PROTOCOL_ID = 0; unsigned char MASK = 1]	40	static
cdcprolific.cpp:19:1:PL2303::PL2303(USB*, CDCAsyncOper*)	8	static
