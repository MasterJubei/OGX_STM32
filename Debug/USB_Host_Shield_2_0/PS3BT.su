PS3BT.cpp:204:6:virtual void PS3BT::Reset()	0	static
PS3BT.cpp:217:6:virtual void PS3BT::disconnect()	16	static
PS3BT.cpp:23:1:PS3BT::PS3BT(BTD*, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t)	24	static
PS3BT.cpp:49:6:bool PS3BT::getButtonPress(ButtonEnum)	0	static
PS3BT.cpp:53:6:bool PS3BT::getButtonClick(ButtonEnum)	0	static
PS3BT.cpp:60:9:uint8_t PS3BT::getAnalogButton(ButtonEnum)	0	static
PS3BT.cpp:64:9:uint8_t PS3BT::getAnalogHat(AnalogHatEnum)	0	static
PS3BT.cpp:68:9:int16_t PS3BT::getSensor(SensorEnum)	0	static
PS3BT.cpp:85:7:float PS3BT::getAngle(AngleEnum)	32	static
PS3BT.cpp:112:7:float PS3BT::get9DOFValues(SensorEnum)	8	static
PS3BT.cpp:141:8:String PS3BT::getTemperature()	40	static
PS3BT.cpp:156:6:bool PS3BT::getStatus(StatusEnum)	0	static
PS3BT.cpp:160:6:void PS3BT::printStatusString()	128	static
PS3BT.cpp:371:6:void PS3BT::L2CAP_task()	32	static
PS3BT.cpp:224:6:virtual void PS3BT::ACLData(uint8_t*)	32	static
PS3BT.cpp:512:6:void PS3BT::HID_Command(uint8_t*, uint8_t)	32	static
PS3BT.cpp:519:6:void PS3BT::setAllOff()	8	static
PS3BT.cpp:530:6:void PS3BT::setRumbleOff()	80	static
PS3BT.cpp:549:6:void PS3BT::setRumbleOn(uint8_t, uint8_t, uint8_t, uint8_t)	88	static
PS3BT.cpp:540:6:void PS3BT::setRumbleOn(RumbleEnum)	16	static
PS3BT.cpp:559:6:void PS3BT::setLedRaw(uint8_t)	8	static
PS3BT.cpp:564:6:void PS3BT::setLedOff(LEDEnum)	8	static
PS3BT.cpp:569:6:void PS3BT::setLedOn(LEDEnum)	8	static
PS3BT.cpp:578:6:void PS3BT::setLedToggle(LEDEnum)	8	static
PS3BT.cpp:583:6:void PS3BT::enable_sixaxis()	16	static
PS3BT.cpp:597:6:void PS3BT::HIDMove_Command(uint8_t*, uint8_t)	32	static
PS3BT.cpp:454:6:virtual void PS3BT::Run()	8	static
PS3BT.cpp:604:6:void PS3BT::moveSetBulb(uint8_t, uint8_t, uint8_t)	8	static
PS3BT.cpp:613:6:void PS3BT::moveSetBulb(ColorsEnum)	8	static
PS3BT.cpp:628:6:virtual void PS3BT::onInit()	8	static
PS3BT.cpp:617:6:void PS3BT::moveSetRumble(uint8_t)	8	static
