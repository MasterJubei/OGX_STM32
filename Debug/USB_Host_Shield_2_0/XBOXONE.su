UsbCore.h:141:25:virtual uint8_t USBDeviceConfig::ConfigureDevice(uint8_t, uint8_t, bool)	0	static
UsbCore.h:157:22:virtual void USBDeviceConfig::ResetHubPort(uint8_t)	0	static
UsbCore.h:165:22:virtual bool USBDeviceConfig::DEVCLASSOK(uint8_t)	0	static
UsbCore.h:169:22:virtual bool USBDeviceConfig::DEVSUBCLASSOK(uint8_t)	0	static
XBOXONE.h:99:25:virtual uint8_t XBOXONE::GetAddress()	0	static
XBOXONE.h:107:22:virtual bool XBOXONE::isReady()	0	static
XBOXONE.h:125:22:virtual bool XBOXONE::VIDPIDOK(uint16_t, uint16_t)	0	static
XBOXONE.cpp:239:6:virtual void XBOXONE::EndpointXtract(uint8_t, uint8_t, uint8_t, uint8_t, const USB_ENDPOINT_DESCRIPTOR*)	0	static
XBOXONE.cpp:286:9:virtual uint8_t XBOXONE::Release()	16	static
confdescparser.h:91:6:void ConfigDescParser<CLASS_ID, SUBCLASS_ID, PROTOCOL_ID, MASK>::Parse(uint16_t, const uint8_t*, const uint16_t&) [with unsigned char CLASS_ID = 0; unsigned char SUBCLASS_ID = 0; unsigned char PROTOCOL_ID = 0; unsigned char MASK = 0]	40	static
XBOXONE.cpp:27:1:XBOXONE::XBOXONE(USB*)	24	static
XBOXONE.cpp:265:6:void XBOXONE::PrintEndpointDescriptor(const USB_ENDPOINT_DESCRIPTOR*)	0	static
XBOXONE.cpp:330:6:void XBOXONE::readReport()	12	static
XBOXONE.cpp:300:9:virtual uint8_t XBOXONE::Poll()	24	static
XBOXONE.cpp:380:10:uint16_t XBOXONE::getButtonPress(ButtonEnum)	0	static
XBOXONE.cpp:388:6:bool XBOXONE::getButtonClick(ButtonEnum)	0	static
XBOXONE.cpp:408:9:int16_t XBOXONE::getAnalogHat(AnalogHatEnum)	0	static
XBOXONE.cpp:413:9:uint8_t XBOXONE::XboxCommand(uint8_t*, uint16_t)	16	static
XBOXONE.cpp:424:6:void XBOXONE::onInit()	24	static
XBOXONE.cpp:46:9:virtual uint8_t XBOXONE::Init(uint8_t, uint8_t, bool)	136	static
XBOXONE.cpp:450:6:void XBOXONE::setRumbleOff()	24	static
XBOXONE.cpp:472:6:void XBOXONE::setRumbleOn(uint8_t, uint8_t, uint8_t, uint8_t)	32	static
