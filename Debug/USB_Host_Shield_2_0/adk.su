UsbCore.h:137:25:virtual uint8_t USBDeviceConfig::Init(uint8_t, uint8_t, bool)	16	static
UsbCore.h:141:25:virtual uint8_t USBDeviceConfig::ConfigureDevice(uint8_t, uint8_t, bool)	16	static
UsbCore.h:145:25:virtual uint8_t USBDeviceConfig::Release()	16	static
UsbCore.h:149:25:virtual uint8_t USBDeviceConfig::Poll()	16	static
UsbCore.h:153:25:virtual uint8_t USBDeviceConfig::GetAddress()	16	static
UsbCore.h:157:22:virtual void USBDeviceConfig::ResetHubPort(uint8_t)	16	static
UsbCore.h:161:22:virtual bool USBDeviceConfig::VIDPIDOK(uint16_t, uint16_t)	16	static
UsbCore.h:165:22:virtual bool USBDeviceConfig::DEVCLASSOK(uint8_t)	16	static
UsbCore.h:169:22:virtual bool USBDeviceConfig::DEVSUBCLASSOK(uint8_t)	16	static
UsbCore.h:226:22:AddressPool& USB::GetAddressPool()	16	static
UsbCore.h:230:17:uint8_t USB::RegisterDeviceClass(USBDeviceConfig*)	24	static
parsetools.h:36:9:MultiValueBuffer::MultiValueBuffer()	16	static
parsetools.h:47:9:MultiByteValueParser::MultiByteValueParser()	16	static
parsetools.h:54:14:void MultiByteValueParser::Initialize(MultiValueBuffer*)	16	static
parsetools.h:69:9:ByteSkipper::ByteSkipper()	16	static
parsetools.h:72:14:void ByteSkipper::Initialize(MultiValueBuffer*)	16	static
parsetools.h:77:14:bool ByteSkipper::Skip(uint8_t**, uint16_t*, uint16_t)	24	static
confdescparser.h:35:22:virtual void UsbConfigXtracter::EndpointXtract(uint8_t, uint8_t, uint8_t, uint8_t, const USB_ENDPOINT_DESCRIPTOR*)	16	static
adk.h:103:25:virtual uint8_t ADK::Poll()	16	static
adk.h:107:25:virtual uint8_t ADK::GetAddress()	16	static
adk.h:111:22:virtual bool ADK::isReady()	16	static
adk.h:115:22:virtual bool ADK::VIDPIDOK(uint16_t, uint16_t)	16	static
adk.h:126:16:uint8_t ADK::getProto(uint8_t*)	48	static
adk.h:131:16:uint8_t ADK::sendStr(uint8_t, const char*)	72	static
adk.h:136:16:uint8_t ADK::switchAcc()	48	static
UsbCore.h:134:7:constexpr USBDeviceConfig::USBDeviceConfig()	16	static
confdescparser.h:30:7:constexpr UsbConfigXtracter::UsbConfigXtracter()	16	static
adk.cpp:25:1:ADK::ADK(USB*, const char*, const char*, const char*, const char*, const char*, const char*)	32	static
adk.cpp:59:9:virtual uint8_t ADK::ConfigureDevice(uint8_t, uint8_t, bool)	24	static
adk.cpp:64:9:virtual uint8_t ADK::Init(uint8_t, uint8_t, bool)	136	static
adk.cpp:312:6:virtual void ADK::EndpointXtract(uint8_t, uint8_t, uint8_t, uint8_t, const USB_ENDPOINT_DESCRIPTOR*)	24	static
adk.cpp:337:9:virtual uint8_t ADK::Release()	16	static
adk.cpp:347:9:uint8_t ADK::RcvData(uint16_t*, uint8_t*)	32	static
adk.cpp:353:9:uint8_t ADK::SndData(uint16_t, uint8_t*)	40	static
adk.cpp:357:6:void ADK::PrintEndpointDescriptor(const USB_ENDPOINT_DESCRIPTOR*)	16	static
UsbCore.h:205:7:constexpr USBReadParser::USBReadParser()	16	static
confdescparser.h:79:1:ConfigDescParser<CLASS_ID, SUBCLASS_ID, PROTOCOL_ID, MASK>::ConfigDescParser(UsbConfigXtracter*) [with unsigned char CLASS_ID = 0; unsigned char SUBCLASS_ID = 0; unsigned char PROTOCOL_ID = 0; unsigned char MASK = 0]	16	static
printhex.h:76:25:void D_PrintHex(T, int) [with T = unsigned char]	16	static
printhex.h:76:25:void D_PrintHex(T, int) [with T = short unsigned int]	16	static
confdescparser.h:91:6:void ConfigDescParser<CLASS_ID, SUBCLASS_ID, PROTOCOL_ID, MASK>::Parse(uint16_t, const uint8_t*, const uint16_t&) [with unsigned char CLASS_ID = 0; unsigned char SUBCLASS_ID = 0; unsigned char PROTOCOL_ID = 0; unsigned char MASK = 0]	32	static
confdescparser.h:103:6:bool ConfigDescParser<CLASS_ID, SUBCLASS_ID, PROTOCOL_ID, MASK>::ParseDescriptor(uint8_t**, uint16_t*) [with unsigned char CLASS_ID = 0; unsigned char SUBCLASS_ID = 0; unsigned char PROTOCOL_ID = 0; unsigned char MASK = 0]	56	static
